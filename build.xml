<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. --><project basedir="." default="build" name="Cs681(IndividualProject)">
    <property environment="env"/>
    <!--<property name="ECLIPSE_HOME" value="../../../Documents/eclipse-jee-luna-SR2-win32-x86_64/eclipse/"/>-->
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.8"/>
    <property name="source" value="1.8"/>
              	<property name="report.dir" value="testNgReport"/>
              	<property name="resources.dir" value=""/>
              	
    <path id="Cs681(IndividualProject).classpath">
        <pathelement location="bin"/>
        <pathelement location="lib/apache-commons-lang.jar"/>
        <pathelement location="lib/ical4j-1.0.jar"/>
        <pathelement location="lib/org-apache-commons-logging.jar"/>
        <pathelement location="lib/backport-util-concurrent.jar"/>
    	<pathelement location="lib/testng-6.9.9.jar"/>
    </path>
              	<path id="Selenium.libraryclasspath">
              	                <fileset dir="lib" includes="**/*.jar" />   
              		
              	</path>
              	
              	
              		
    <target name="init">
        <mkdir dir="bin"/>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="src">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="bin"/>
    </target>
    <target depends="clean" name="cleanall"/>
    <target depends="build-subprojects,build-project,SeleniumTest,testng-execution" name="build"/>
    <target name="build-subprojects"/>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" includeantruntime="false" source="${source}" target="${target}">
            <src path="src"/>
            <classpath refid="Cs681(IndividualProject).classpath"/>
        	
        	<classpath refid="Selenium.libraryclasspath"/>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
        <copy todir="${ant.library.dir}">
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </copy>
        <unzip dest="${ant.library.dir}">
            <patternset includes="jdtCompilerAdapter.jar"/>
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </unzip>
    </target>
    <target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
        <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
        <antcall target="build"/>
    </target>
    <target name="Server">
        <java classname="Server" failonerror="true" fork="yes">
            <classpath refid="Cs681(IndividualProject).classpath"/>
        </java>
    </target>
              	
              	<target name="SeleniumTest">
              	        <java classname="SeleniumTest" failonerror="true" fork="yes">
              	            <classpath refid="Cs681(IndividualProject).classpath"/>
              	        	<classpath refid="Selenium.libraryclasspath"/>
              	        </java>
              	    </target>
              
              <!-- Logic for TestNg Test cases -->
              	
              	<property name="basedir" value="." />
              		<property name="lib" value="${basedir}/lib" />
              		<property name="src" value="${basedir}/src" />
              		<property name="bin" value="${basedir}/bin" />
              		<property name="report-dir" value="${basedir}/Test-Report" />
              		<property name="testng-report-dir" value="${report-dir}/TestNGreport" />
              		
              		<!-- ====== Set the classpath ====  -->
              		<path id="classpath">
              			<pathelement location="${bin}" />
              			<fileset dir="${lib}">
              				<include name="*.jar" />
              			</fileset>
              		</path>
              		
              		<!-- Delete directories  -->
              		<target name="delete-dir">
              			<delete dir="${bin}" />
              			<delete dir="${report-dir}" />
              		</target>
              		
              		<!-- Creating directories -->
              		<target name="create" depends="delete-dir">
              			<mkdir dir="${bin}" />
              			<mkdir dir="${report-dir}" />
              		</target>
              	
              	
              	<!-- Compile the java code from ${src} into ${bin} -->
              		<target name="compile" depends="create">
              			<javac srcdir="${src}" classpathref="classpath" includeAntRuntime="No" destdir="${bin}" />
              			<echo> /* Compiled Directory Classes */ </echo>
              		</target>
              	
              	
              	
              	<!-- Runs the file and generates Reportng report for TestNG-->
              		<taskdef name="testng" classname="org.testng.TestNGAntTask" classpathref="classpath" />
              		
              		<target name="testng-execution" depends="compile">
              			<mkdir dir="${testng-report-dir}" />
              			<testng outputdir="${testng-report-dir}" classpathref="classpath" useDefaultListeners="true">
              				<xmlfileset dir="${basedir}" includes="testng.xml" />
              			</testng>
              		</target>
              	
              	
</project>
